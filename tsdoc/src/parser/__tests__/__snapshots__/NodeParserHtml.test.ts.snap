// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`01 HTML start tags: simple, positive 1`] = `
Object {
  "buffer": "/**[n] * [<]tag/[>][n] * [<]tag-a /[>][n] * [<]tag-b [>][<]tag-c /[>][n] * [<]tag-d[n] * [>][n] * [<]tag-e[n] *      /[>]  [n] */",
  "gaps": Array [],
  "lines": Array [
    "[<]tag/[>]",
    "[<]tag-a /[>]",
    "[<]tag-b [>][<]tag-c /[>]",
    "[<]tag-d",
    "[>]",
    "[<]tag-e",
    "     /[>]",
  ],
  "logMessages": Array [],
  "nodes": Object {
    "kind": "Comment",
    "nodes": Array [
      Object {
        "kind": "Section",
        "nodes": Array [
          Object {
            "kind": "Paragraph",
            "nodes": Array [
              Object {
                "kind": "HtmlStartTag",
                "nodes": Array [
                  Object {
                    "kind": "Excerpt: HtmlStartTag_OpeningDelimiter",
                    "nodeExcerpt": "[<]",
                  },
                  Object {
                    "kind": "Excerpt: HtmlStartTag_Name",
                    "nodeExcerpt": "tag",
                  },
                  Object {
                    "kind": "Excerpt: HtmlStartTag_ClosingDelimiter",
                    "nodeExcerpt": "/[>]",
                  },
                ],
              },
              Object {
                "kind": "SoftBreak",
                "nodes": Array [
                  Object {
                    "kind": "Excerpt: SoftBreak",
                    "nodeExcerpt": "[n]",
                  },
                ],
              },
              Object {
                "kind": "HtmlStartTag",
                "nodes": Array [
                  Object {
                    "kind": "Excerpt: HtmlStartTag_OpeningDelimiter",
                    "nodeExcerpt": "[<]",
                  },
                  Object {
                    "kind": "Excerpt: HtmlStartTag_Name",
                    "nodeExcerpt": "tag-a",
                  },
                  Object {
                    "kind": "Excerpt: Spacing",
                    "nodeExcerpt": " ",
                  },
                  Object {
                    "kind": "Excerpt: HtmlStartTag_ClosingDelimiter",
                    "nodeExcerpt": "/[>]",
                  },
                ],
              },
              Object {
                "kind": "SoftBreak",
                "nodes": Array [
                  Object {
                    "kind": "Excerpt: SoftBreak",
                    "nodeExcerpt": "[n]",
                  },
                ],
              },
              Object {
                "kind": "HtmlStartTag",
                "nodes": Array [
                  Object {
                    "kind": "Excerpt: HtmlStartTag_OpeningDelimiter",
                    "nodeExcerpt": "[<]",
                  },
                  Object {
                    "kind": "Excerpt: HtmlStartTag_Name",
                    "nodeExcerpt": "tag-b",
                  },
                  Object {
                    "kind": "Excerpt: Spacing",
                    "nodeExcerpt": " ",
                  },
                  Object {
                    "kind": "Excerpt: HtmlStartTag_ClosingDelimiter",
                    "nodeExcerpt": "[>]",
                  },
                ],
              },
              Object {
                "kind": "HtmlStartTag",
                "nodes": Array [
                  Object {
                    "kind": "Excerpt: HtmlStartTag_OpeningDelimiter",
                    "nodeExcerpt": "[<]",
                  },
                  Object {
                    "kind": "Excerpt: HtmlStartTag_Name",
                    "nodeExcerpt": "tag-c",
                  },
                  Object {
                    "kind": "Excerpt: Spacing",
                    "nodeExcerpt": " ",
                  },
                  Object {
                    "kind": "Excerpt: HtmlStartTag_ClosingDelimiter",
                    "nodeExcerpt": "/[>]",
                  },
                ],
              },
              Object {
                "kind": "SoftBreak",
                "nodes": Array [
                  Object {
                    "kind": "Excerpt: SoftBreak",
                    "nodeExcerpt": "[n]",
                  },
                ],
              },
              Object {
                "kind": "HtmlStartTag",
                "nodes": Array [
                  Object {
                    "kind": "Excerpt: HtmlStartTag_OpeningDelimiter",
                    "nodeExcerpt": "[<]",
                  },
                  Object {
                    "kind": "Excerpt: HtmlStartTag_Name",
                    "nodeExcerpt": "tag-d",
                  },
                  Object {
                    "kind": "Excerpt: Spacing",
                    "nodeExcerpt": "[n]",
                  },
                  Object {
                    "kind": "Excerpt: HtmlStartTag_ClosingDelimiter",
                    "nodeExcerpt": "[>]",
                  },
                ],
              },
              Object {
                "kind": "SoftBreak",
                "nodes": Array [
                  Object {
                    "kind": "Excerpt: SoftBreak",
                    "nodeExcerpt": "[n]",
                  },
                ],
              },
              Object {
                "kind": "HtmlStartTag",
                "nodes": Array [
                  Object {
                    "kind": "Excerpt: HtmlStartTag_OpeningDelimiter",
                    "nodeExcerpt": "[<]",
                  },
                  Object {
                    "kind": "Excerpt: HtmlStartTag_Name",
                    "nodeExcerpt": "tag-e",
                  },
                  Object {
                    "kind": "Excerpt: Spacing",
                    "nodeExcerpt": "[n]     ",
                  },
                  Object {
                    "kind": "Excerpt: HtmlStartTag_ClosingDelimiter",
                    "nodeExcerpt": "/[>]",
                  },
                ],
              },
              Object {
                "kind": "SoftBreak",
                "nodes": Array [
                  Object {
                    "kind": "Excerpt: SoftBreak",
                    "nodeExcerpt": "[n]",
                  },
                ],
              },
            ],
          },
        ],
      },
    ],
  },
}
`;

exports[`02 HTML start tags: simple, negative 1`] = `
Object {
  "buffer": "/**[n] * [<] tag/[>][n] * [<]tag -a /[>][n] * [<]tag-b /[<]tag-c / [>][n] * [<]tag-d[n] */",
  "gaps": Array [],
  "lines": Array [
    "[<] tag/[>]",
    "[<]tag -a /[>]",
    "[<]tag-b /[<]tag-c / [>]",
    "[<]tag-d",
  ],
  "logMessages": Array [
    "(2,4): Invalid HTML element: A space is not allowed here",
    "(2,10): The \\">\\" character should be escaped using a backslash to avoid confusion with an HTML tag",
    "(3,4): The HTML tag has invalid syntax: Expecting an attribute or \\">\\" or \\"/>\\"",
    "(3,13): The \\">\\" character should be escaped using a backslash to avoid confusion with an HTML tag",
    "(4,4): The HTML tag has invalid syntax: Expecting an attribute or \\">\\" or \\"/>\\"",
    "(4,12): The HTML tag has invalid syntax: Expecting an attribute or \\">\\" or \\"/>\\"",
    "(4,21): The \\">\\" character should be escaped using a backslash to avoid confusion with an HTML tag",
    "(5,4): The HTML tag has invalid syntax: Expecting an attribute or \\">\\" or \\"/>\\"",
  ],
  "nodes": Object {
    "kind": "Comment",
    "nodes": Array [
      Object {
        "kind": "Section",
        "nodes": Array [
          Object {
            "kind": "Paragraph",
            "nodes": Array [
              Object {
                "errorLocation": " ",
                "errorLocationPrecedingToken": "<",
                "errorMessage": "Invalid HTML element: A space is not allowed here",
                "kind": "ErrorText",
                "nodes": Array [
                  Object {
                    "kind": "Excerpt: ErrorText",
                    "nodeExcerpt": "[<]",
                  },
                ],
              },
              Object {
                "kind": "PlainText",
                "nodes": Array [
                  Object {
                    "kind": "Excerpt: PlainText",
                    "nodeExcerpt": " tag/",
                  },
                ],
              },
              Object {
                "errorLocation": "[>]",
                "errorLocationPrecedingToken": "/",
                "errorMessage": "The [q][>][q] character should be escaped using a backslash to avoid confusion with an HTML tag",
                "kind": "ErrorText",
                "nodes": Array [
                  Object {
                    "kind": "Excerpt: ErrorText",
                    "nodeExcerpt": "[>]",
                  },
                ],
              },
              Object {
                "kind": "SoftBreak",
                "nodes": Array [
                  Object {
                    "kind": "Excerpt: SoftBreak",
                    "nodeExcerpt": "[n]",
                  },
                ],
              },
              Object {
                "errorLocation": "-",
                "errorLocationPrecedingToken": " ",
                "errorMessage": "The HTML tag has invalid syntax: Expecting an attribute or [q][>][q] or [q]/[>][q]",
                "kind": "ErrorText",
                "nodes": Array [
                  Object {
                    "kind": "Excerpt: ErrorText",
                    "nodeExcerpt": "[<]",
                  },
                ],
              },
              Object {
                "kind": "PlainText",
                "nodes": Array [
                  Object {
                    "kind": "Excerpt: PlainText",
                    "nodeExcerpt": "tag -a /",
                  },
                ],
              },
              Object {
                "errorLocation": "[>]",
                "errorLocationPrecedingToken": "/",
                "errorMessage": "The [q][>][q] character should be escaped using a backslash to avoid confusion with an HTML tag",
                "kind": "ErrorText",
                "nodes": Array [
                  Object {
                    "kind": "Excerpt: ErrorText",
                    "nodeExcerpt": "[>]",
                  },
                ],
              },
              Object {
                "kind": "SoftBreak",
                "nodes": Array [
                  Object {
                    "kind": "Excerpt: SoftBreak",
                    "nodeExcerpt": "[n]",
                  },
                ],
              },
              Object {
                "errorLocation": "/",
                "errorLocationPrecedingToken": " ",
                "errorMessage": "The HTML tag has invalid syntax: Expecting an attribute or [q][>][q] or [q]/[>][q]",
                "kind": "ErrorText",
                "nodes": Array [
                  Object {
                    "kind": "Excerpt: ErrorText",
                    "nodeExcerpt": "[<]",
                  },
                ],
              },
              Object {
                "kind": "PlainText",
                "nodes": Array [
                  Object {
                    "kind": "Excerpt: PlainText",
                    "nodeExcerpt": "tag-b /",
                  },
                ],
              },
              Object {
                "errorLocation": "/",
                "errorLocationPrecedingToken": " ",
                "errorMessage": "The HTML tag has invalid syntax: Expecting an attribute or [q][>][q] or [q]/[>][q]",
                "kind": "ErrorText",
                "nodes": Array [
                  Object {
                    "kind": "Excerpt: ErrorText",
                    "nodeExcerpt": "[<]",
                  },
                ],
              },
              Object {
                "kind": "PlainText",
                "nodes": Array [
                  Object {
                    "kind": "Excerpt: PlainText",
                    "nodeExcerpt": "tag-c / ",
                  },
                ],
              },
              Object {
                "errorLocation": "[>]",
                "errorLocationPrecedingToken": " ",
                "errorMessage": "The [q][>][q] character should be escaped using a backslash to avoid confusion with an HTML tag",
                "kind": "ErrorText",
                "nodes": Array [
                  Object {
                    "kind": "Excerpt: ErrorText",
                    "nodeExcerpt": "[>]",
                  },
                ],
              },
              Object {
                "kind": "SoftBreak",
                "nodes": Array [
                  Object {
                    "kind": "Excerpt: SoftBreak",
                    "nodeExcerpt": "[n]",
                  },
                ],
              },
              Object {
                "errorLocation": "",
                "errorLocationPrecedingToken": "
",
                "errorMessage": "The HTML tag has invalid syntax: Expecting an attribute or [q][>][q] or [q]/[>][q]",
                "kind": "ErrorText",
                "nodes": Array [
                  Object {
                    "kind": "Excerpt: ErrorText",
                    "nodeExcerpt": "[<]",
                  },
                ],
              },
              Object {
                "kind": "PlainText",
                "nodes": Array [
                  Object {
                    "kind": "Excerpt: PlainText",
                    "nodeExcerpt": "tag-d",
                  },
                ],
              },
              Object {
                "kind": "SoftBreak",
                "nodes": Array [
                  Object {
                    "kind": "Excerpt: SoftBreak",
                    "nodeExcerpt": "[n]",
                  },
                ],
              },
            ],
          },
        ],
      },
    ],
  },
}
`;

exports[`03 HTML start tags: with attributes, positive 1`] = `
Object {
  "buffer": "/**[n] * [<]tag-a attr-one=[q]one[q] [>][n] * [<]tag-b[n] *   attr-two[n] *   = [q]2[q][n] * /[>][n] */",
  "gaps": Array [],
  "lines": Array [
    "[<]tag-a attr-one=[q]one[q] [>]",
    "[<]tag-b",
    "  attr-two",
    "  = [q]2[q]",
    "/[>]",
  ],
  "logMessages": Array [],
  "nodes": Object {
    "kind": "Comment",
    "nodes": Array [
      Object {
        "kind": "Section",
        "nodes": Array [
          Object {
            "kind": "Paragraph",
            "nodes": Array [
              Object {
                "kind": "HtmlStartTag",
                "nodes": Array [
                  Object {
                    "kind": "Excerpt: HtmlStartTag_OpeningDelimiter",
                    "nodeExcerpt": "[<]",
                  },
                  Object {
                    "kind": "Excerpt: HtmlStartTag_Name",
                    "nodeExcerpt": "tag-a",
                  },
                  Object {
                    "kind": "Excerpt: Spacing",
                    "nodeExcerpt": " ",
                  },
                  Object {
                    "kind": "HtmlAttribute",
                    "nodes": Array [
                      Object {
                        "kind": "Excerpt: HtmlAttribute_Name",
                        "nodeExcerpt": "attr-one",
                      },
                      Object {
                        "kind": "Excerpt: HtmlAttribute_Equals",
                        "nodeExcerpt": "=",
                      },
                      Object {
                        "kind": "Excerpt: HtmlAttribute_Value",
                        "nodeExcerpt": "[q]one[q]",
                      },
                      Object {
                        "kind": "Excerpt: Spacing",
                        "nodeExcerpt": " ",
                      },
                    ],
                  },
                  Object {
                    "kind": "Excerpt: HtmlStartTag_ClosingDelimiter",
                    "nodeExcerpt": "[>]",
                  },
                ],
              },
              Object {
                "kind": "SoftBreak",
                "nodes": Array [
                  Object {
                    "kind": "Excerpt: SoftBreak",
                    "nodeExcerpt": "[n]",
                  },
                ],
              },
              Object {
                "kind": "HtmlStartTag",
                "nodes": Array [
                  Object {
                    "kind": "Excerpt: HtmlStartTag_OpeningDelimiter",
                    "nodeExcerpt": "[<]",
                  },
                  Object {
                    "kind": "Excerpt: HtmlStartTag_Name",
                    "nodeExcerpt": "tag-b",
                  },
                  Object {
                    "kind": "Excerpt: Spacing",
                    "nodeExcerpt": "[n]  ",
                  },
                  Object {
                    "kind": "HtmlAttribute",
                    "nodes": Array [
                      Object {
                        "kind": "Excerpt: HtmlAttribute_Name",
                        "nodeExcerpt": "attr-two",
                      },
                      Object {
                        "kind": "Excerpt: Spacing",
                        "nodeExcerpt": "[n]  ",
                      },
                      Object {
                        "kind": "Excerpt: HtmlAttribute_Equals",
                        "nodeExcerpt": "=",
                      },
                      Object {
                        "kind": "Excerpt: Spacing",
                        "nodeExcerpt": " ",
                      },
                      Object {
                        "kind": "Excerpt: HtmlAttribute_Value",
                        "nodeExcerpt": "[q]2[q]",
                      },
                      Object {
                        "kind": "Excerpt: Spacing",
                        "nodeExcerpt": "[n]",
                      },
                    ],
                  },
                  Object {
                    "kind": "Excerpt: HtmlStartTag_ClosingDelimiter",
                    "nodeExcerpt": "/[>]",
                  },
                ],
              },
              Object {
                "kind": "SoftBreak",
                "nodes": Array [
                  Object {
                    "kind": "Excerpt: SoftBreak",
                    "nodeExcerpt": "[n]",
                  },
                ],
              },
            ],
          },
        ],
      },
    ],
  },
}
`;

exports[`03 HTML start tags: with attributes, positive 2`] = `
Object {
  "buffer": "/**[n] * [<]tag-c attr-three=[q]3[q] four='4'/[>][n] * [<]tag-d[n] *   attr-five[n] *   = [q]5[q][n] *   six[n] *   = '6'[n] * /[>][n] */",
  "gaps": Array [],
  "lines": Array [
    "[<]tag-c attr-three=[q]3[q] four='4'/[>]",
    "[<]tag-d",
    "  attr-five",
    "  = [q]5[q]",
    "  six",
    "  = '6'",
    "/[>]",
  ],
  "logMessages": Array [],
  "nodes": Object {
    "kind": "Comment",
    "nodes": Array [
      Object {
        "kind": "Section",
        "nodes": Array [
          Object {
            "kind": "Paragraph",
            "nodes": Array [
              Object {
                "kind": "HtmlStartTag",
                "nodes": Array [
                  Object {
                    "kind": "Excerpt: HtmlStartTag_OpeningDelimiter",
                    "nodeExcerpt": "[<]",
                  },
                  Object {
                    "kind": "Excerpt: HtmlStartTag_Name",
                    "nodeExcerpt": "tag-c",
                  },
                  Object {
                    "kind": "Excerpt: Spacing",
                    "nodeExcerpt": " ",
                  },
                  Object {
                    "kind": "HtmlAttribute",
                    "nodes": Array [
                      Object {
                        "kind": "Excerpt: HtmlAttribute_Name",
                        "nodeExcerpt": "attr-three",
                      },
                      Object {
                        "kind": "Excerpt: HtmlAttribute_Equals",
                        "nodeExcerpt": "=",
                      },
                      Object {
                        "kind": "Excerpt: HtmlAttribute_Value",
                        "nodeExcerpt": "[q]3[q]",
                      },
                      Object {
                        "kind": "Excerpt: Spacing",
                        "nodeExcerpt": " ",
                      },
                    ],
                  },
                  Object {
                    "kind": "HtmlAttribute",
                    "nodes": Array [
                      Object {
                        "kind": "Excerpt: HtmlAttribute_Name",
                        "nodeExcerpt": "four",
                      },
                      Object {
                        "kind": "Excerpt: HtmlAttribute_Equals",
                        "nodeExcerpt": "=",
                      },
                      Object {
                        "kind": "Excerpt: HtmlAttribute_Value",
                        "nodeExcerpt": "'4'",
                      },
                    ],
                  },
                  Object {
                    "kind": "Excerpt: HtmlStartTag_ClosingDelimiter",
                    "nodeExcerpt": "/[>]",
                  },
                ],
              },
              Object {
                "kind": "SoftBreak",
                "nodes": Array [
                  Object {
                    "kind": "Excerpt: SoftBreak",
                    "nodeExcerpt": "[n]",
                  },
                ],
              },
              Object {
                "kind": "HtmlStartTag",
                "nodes": Array [
                  Object {
                    "kind": "Excerpt: HtmlStartTag_OpeningDelimiter",
                    "nodeExcerpt": "[<]",
                  },
                  Object {
                    "kind": "Excerpt: HtmlStartTag_Name",
                    "nodeExcerpt": "tag-d",
                  },
                  Object {
                    "kind": "Excerpt: Spacing",
                    "nodeExcerpt": "[n]  ",
                  },
                  Object {
                    "kind": "HtmlAttribute",
                    "nodes": Array [
                      Object {
                        "kind": "Excerpt: HtmlAttribute_Name",
                        "nodeExcerpt": "attr-five",
                      },
                      Object {
                        "kind": "Excerpt: Spacing",
                        "nodeExcerpt": "[n]  ",
                      },
                      Object {
                        "kind": "Excerpt: HtmlAttribute_Equals",
                        "nodeExcerpt": "=",
                      },
                      Object {
                        "kind": "Excerpt: Spacing",
                        "nodeExcerpt": " ",
                      },
                      Object {
                        "kind": "Excerpt: HtmlAttribute_Value",
                        "nodeExcerpt": "[q]5[q]",
                      },
                      Object {
                        "kind": "Excerpt: Spacing",
                        "nodeExcerpt": "[n]  ",
                      },
                    ],
                  },
                  Object {
                    "kind": "HtmlAttribute",
                    "nodes": Array [
                      Object {
                        "kind": "Excerpt: HtmlAttribute_Name",
                        "nodeExcerpt": "six",
                      },
                      Object {
                        "kind": "Excerpt: Spacing",
                        "nodeExcerpt": "[n]  ",
                      },
                      Object {
                        "kind": "Excerpt: HtmlAttribute_Equals",
                        "nodeExcerpt": "=",
                      },
                      Object {
                        "kind": "Excerpt: Spacing",
                        "nodeExcerpt": " ",
                      },
                      Object {
                        "kind": "Excerpt: HtmlAttribute_Value",
                        "nodeExcerpt": "'6'",
                      },
                      Object {
                        "kind": "Excerpt: Spacing",
                        "nodeExcerpt": "[n]",
                      },
                    ],
                  },
                  Object {
                    "kind": "Excerpt: HtmlStartTag_ClosingDelimiter",
                    "nodeExcerpt": "/[>]",
                  },
                ],
              },
              Object {
                "kind": "SoftBreak",
                "nodes": Array [
                  Object {
                    "kind": "Excerpt: SoftBreak",
                    "nodeExcerpt": "[n]",
                  },
                ],
              },
            ],
          },
        ],
      },
    ],
  },
}
`;

exports[`03 HTML start tags: with attributes, positive 3`] = `
Object {
  "buffer": "/**[n] * [<]tag-e attr-one=[q]one[q] two='two'/[>][n] * [<]tag-f[n] *   attr-one[n] *   = [q]one[q][n] *   two[n] *   = 'two'[n] * /[>][n] */",
  "gaps": Array [],
  "lines": Array [
    "[<]tag-e attr-one=[q]one[q] two='two'/[>]",
    "[<]tag-f",
    "  attr-one",
    "  = [q]one[q]",
    "  two",
    "  = 'two'",
    "/[>]",
  ],
  "logMessages": Array [],
  "nodes": Object {
    "kind": "Comment",
    "nodes": Array [
      Object {
        "kind": "Section",
        "nodes": Array [
          Object {
            "kind": "Paragraph",
            "nodes": Array [
              Object {
                "kind": "HtmlStartTag",
                "nodes": Array [
                  Object {
                    "kind": "Excerpt: HtmlStartTag_OpeningDelimiter",
                    "nodeExcerpt": "[<]",
                  },
                  Object {
                    "kind": "Excerpt: HtmlStartTag_Name",
                    "nodeExcerpt": "tag-e",
                  },
                  Object {
                    "kind": "Excerpt: Spacing",
                    "nodeExcerpt": " ",
                  },
                  Object {
                    "kind": "HtmlAttribute",
                    "nodes": Array [
                      Object {
                        "kind": "Excerpt: HtmlAttribute_Name",
                        "nodeExcerpt": "attr-one",
                      },
                      Object {
                        "kind": "Excerpt: HtmlAttribute_Equals",
                        "nodeExcerpt": "=",
                      },
                      Object {
                        "kind": "Excerpt: HtmlAttribute_Value",
                        "nodeExcerpt": "[q]one[q]",
                      },
                      Object {
                        "kind": "Excerpt: Spacing",
                        "nodeExcerpt": " ",
                      },
                    ],
                  },
                  Object {
                    "kind": "HtmlAttribute",
                    "nodes": Array [
                      Object {
                        "kind": "Excerpt: HtmlAttribute_Name",
                        "nodeExcerpt": "two",
                      },
                      Object {
                        "kind": "Excerpt: HtmlAttribute_Equals",
                        "nodeExcerpt": "=",
                      },
                      Object {
                        "kind": "Excerpt: HtmlAttribute_Value",
                        "nodeExcerpt": "'two'",
                      },
                    ],
                  },
                  Object {
                    "kind": "Excerpt: HtmlStartTag_ClosingDelimiter",
                    "nodeExcerpt": "/[>]",
                  },
                ],
              },
              Object {
                "kind": "SoftBreak",
                "nodes": Array [
                  Object {
                    "kind": "Excerpt: SoftBreak",
                    "nodeExcerpt": "[n]",
                  },
                ],
              },
              Object {
                "kind": "HtmlStartTag",
                "nodes": Array [
                  Object {
                    "kind": "Excerpt: HtmlStartTag_OpeningDelimiter",
                    "nodeExcerpt": "[<]",
                  },
                  Object {
                    "kind": "Excerpt: HtmlStartTag_Name",
                    "nodeExcerpt": "tag-f",
                  },
                  Object {
                    "kind": "Excerpt: Spacing",
                    "nodeExcerpt": "[n]  ",
                  },
                  Object {
                    "kind": "HtmlAttribute",
                    "nodes": Array [
                      Object {
                        "kind": "Excerpt: HtmlAttribute_Name",
                        "nodeExcerpt": "attr-one",
                      },
                      Object {
                        "kind": "Excerpt: Spacing",
                        "nodeExcerpt": "[n]  ",
                      },
                      Object {
                        "kind": "Excerpt: HtmlAttribute_Equals",
                        "nodeExcerpt": "=",
                      },
                      Object {
                        "kind": "Excerpt: Spacing",
                        "nodeExcerpt": " ",
                      },
                      Object {
                        "kind": "Excerpt: HtmlAttribute_Value",
                        "nodeExcerpt": "[q]one[q]",
                      },
                      Object {
                        "kind": "Excerpt: Spacing",
                        "nodeExcerpt": "[n]  ",
                      },
                    ],
                  },
                  Object {
                    "kind": "HtmlAttribute",
                    "nodes": Array [
                      Object {
                        "kind": "Excerpt: HtmlAttribute_Name",
                        "nodeExcerpt": "two",
                      },
                      Object {
                        "kind": "Excerpt: Spacing",
                        "nodeExcerpt": "[n]  ",
                      },
                      Object {
                        "kind": "Excerpt: HtmlAttribute_Equals",
                        "nodeExcerpt": "=",
                      },
                      Object {
                        "kind": "Excerpt: Spacing",
                        "nodeExcerpt": " ",
                      },
                      Object {
                        "kind": "Excerpt: HtmlAttribute_Value",
                        "nodeExcerpt": "'two'",
                      },
                      Object {
                        "kind": "Excerpt: Spacing",
                        "nodeExcerpt": "[n]",
                      },
                    ],
                  },
                  Object {
                    "kind": "Excerpt: HtmlStartTag_ClosingDelimiter",
                    "nodeExcerpt": "/[>]",
                  },
                ],
              },
              Object {
                "kind": "SoftBreak",
                "nodes": Array [
                  Object {
                    "kind": "Excerpt: SoftBreak",
                    "nodeExcerpt": "[n]",
                  },
                ],
              },
            ],
          },
        ],
      },
    ],
  },
}
`;

exports[`04 HTML start tags: with attributes, negative 1`] = `
Object {
  "buffer": "/**[n] * [<]tag-a attr -one=[q]one[q] /[>][n] * [<]tag-b attr- two=[q]two[q] /[>][n] * [<]tag-c attr-three='three[q] /[>][n] * [<]tag-d attr-four=@[q]four[q] /[>][n] * [<]tag-e attr-five@=[q]five[q] /[>][n] * [<]tag-f attr-six=[q]six[q]seven=[q]seven[q] /[>][n] */",
  "gaps": Array [],
  "lines": Array [
    "[<]tag-a attr -one=[q]one[q] /[>]",
    "[<]tag-b attr- two=[q]two[q] /[>]",
    "[<]tag-c attr-three='three[q] /[>]",
    "[<]tag-d attr-four=@[q]four[q] /[>]",
    "[<]tag-e attr-five@=[q]five[q] /[>]",
    "[<]tag-f attr-six=[q]six[q]seven=[q]seven[q] /[>]",
  ],
  "logMessages": Array [
    "(2,4): The HTML element has an invalid attribute: Expecting \\"=\\" after HTML attribute name",
    "(2,28): The \\">\\" character should be escaped using a backslash to avoid confusion with an HTML tag",
    "(3,4): The HTML element has an invalid attribute: Expecting \\"=\\" after HTML attribute name",
    "(3,28): The \\">\\" character should be escaped using a backslash to avoid confusion with an HTML tag",
    "(4,4): The HTML element has an invalid attribute: The HTML string is missing its closing quote",
    "(4,31): The \\">\\" character should be escaped using a backslash to avoid confusion with an HTML tag",
    "(5,4): The HTML element has an invalid attribute: Expecting an HTML string starting with a single-quote or double-quote character",
    "(5,21): The \\"@\\" character looks like part of a TSDoc tag; use a backslash to escape it",
    "(5,30): The \\">\\" character should be escaped using a backslash to avoid confusion with an HTML tag",
    "(6,4): The HTML element has an invalid attribute: Expecting \\"=\\" after HTML attribute name",
    "(6,20): The \\"@\\" character looks like part of a TSDoc tag; use a backslash to escape it",
    "(6,30): The \\">\\" character should be escaped using a backslash to avoid confusion with an HTML tag",
    "(7,4): The HTML element has an invalid attribute: The next character after a closing quote must be spacing or punctuation",
    "(7,40): The \\">\\" character should be escaped using a backslash to avoid confusion with an HTML tag",
  ],
  "nodes": Object {
    "kind": "Comment",
    "nodes": Array [
      Object {
        "kind": "Section",
        "nodes": Array [
          Object {
            "kind": "Paragraph",
            "nodes": Array [
              Object {
                "errorLocation": "-",
                "errorLocationPrecedingToken": " ",
                "errorMessage": "The HTML element has an invalid attribute: Expecting [q]=[q] after HTML attribute name",
                "kind": "ErrorText",
                "nodes": Array [
                  Object {
                    "kind": "Excerpt: ErrorText",
                    "nodeExcerpt": "[<]",
                  },
                ],
              },
              Object {
                "kind": "PlainText",
                "nodes": Array [
                  Object {
                    "kind": "Excerpt: PlainText",
                    "nodeExcerpt": "tag-a attr -one=[q]one[q] /",
                  },
                ],
              },
              Object {
                "errorLocation": "[>]",
                "errorLocationPrecedingToken": "/",
                "errorMessage": "The [q][>][q] character should be escaped using a backslash to avoid confusion with an HTML tag",
                "kind": "ErrorText",
                "nodes": Array [
                  Object {
                    "kind": "Excerpt: ErrorText",
                    "nodeExcerpt": "[>]",
                  },
                ],
              },
              Object {
                "kind": "SoftBreak",
                "nodes": Array [
                  Object {
                    "kind": "Excerpt: SoftBreak",
                    "nodeExcerpt": "[n]",
                  },
                ],
              },
              Object {
                "errorLocation": "two",
                "errorLocationPrecedingToken": " ",
                "errorMessage": "The HTML element has an invalid attribute: Expecting [q]=[q] after HTML attribute name",
                "kind": "ErrorText",
                "nodes": Array [
                  Object {
                    "kind": "Excerpt: ErrorText",
                    "nodeExcerpt": "[<]",
                  },
                ],
              },
              Object {
                "kind": "PlainText",
                "nodes": Array [
                  Object {
                    "kind": "Excerpt: PlainText",
                    "nodeExcerpt": "tag-b attr- two=[q]two[q] /",
                  },
                ],
              },
              Object {
                "errorLocation": "[>]",
                "errorLocationPrecedingToken": "/",
                "errorMessage": "The [q][>][q] character should be escaped using a backslash to avoid confusion with an HTML tag",
                "kind": "ErrorText",
                "nodes": Array [
                  Object {
                    "kind": "Excerpt: ErrorText",
                    "nodeExcerpt": "[>]",
                  },
                ],
              },
              Object {
                "kind": "SoftBreak",
                "nodes": Array [
                  Object {
                    "kind": "Excerpt: SoftBreak",
                    "nodeExcerpt": "[n]",
                  },
                ],
              },
              Object {
                "errorLocation": "'",
                "errorLocationPrecedingToken": "=",
                "errorMessage": "The HTML element has an invalid attribute: The HTML string is missing its closing quote",
                "kind": "ErrorText",
                "nodes": Array [
                  Object {
                    "kind": "Excerpt: ErrorText",
                    "nodeExcerpt": "[<]",
                  },
                ],
              },
              Object {
                "kind": "PlainText",
                "nodes": Array [
                  Object {
                    "kind": "Excerpt: PlainText",
                    "nodeExcerpt": "tag-c attr-three='three[q] /",
                  },
                ],
              },
              Object {
                "errorLocation": "[>]",
                "errorLocationPrecedingToken": "/",
                "errorMessage": "The [q][>][q] character should be escaped using a backslash to avoid confusion with an HTML tag",
                "kind": "ErrorText",
                "nodes": Array [
                  Object {
                    "kind": "Excerpt: ErrorText",
                    "nodeExcerpt": "[>]",
                  },
                ],
              },
              Object {
                "kind": "SoftBreak",
                "nodes": Array [
                  Object {
                    "kind": "Excerpt: SoftBreak",
                    "nodeExcerpt": "[n]",
                  },
                ],
              },
              Object {
                "errorLocation": "@",
                "errorLocationPrecedingToken": "=",
                "errorMessage": "The HTML element has an invalid attribute: Expecting an HTML string starting with a single-quote or double-quote character",
                "kind": "ErrorText",
                "nodes": Array [
                  Object {
                    "kind": "Excerpt: ErrorText",
                    "nodeExcerpt": "[<]",
                  },
                ],
              },
              Object {
                "kind": "PlainText",
                "nodes": Array [
                  Object {
                    "kind": "Excerpt: PlainText",
                    "nodeExcerpt": "tag-d attr-four=",
                  },
                ],
              },
              Object {
                "errorLocation": "@",
                "errorLocationPrecedingToken": "=",
                "errorMessage": "The [q]@[q] character looks like part of a TSDoc tag; use a backslash to escape it",
                "kind": "ErrorText",
                "nodes": Array [
                  Object {
                    "kind": "Excerpt: ErrorText",
                    "nodeExcerpt": "@",
                  },
                ],
              },
              Object {
                "kind": "PlainText",
                "nodes": Array [
                  Object {
                    "kind": "Excerpt: PlainText",
                    "nodeExcerpt": "[q]four[q] /",
                  },
                ],
              },
              Object {
                "errorLocation": "[>]",
                "errorLocationPrecedingToken": "/",
                "errorMessage": "The [q][>][q] character should be escaped using a backslash to avoid confusion with an HTML tag",
                "kind": "ErrorText",
                "nodes": Array [
                  Object {
                    "kind": "Excerpt: ErrorText",
                    "nodeExcerpt": "[>]",
                  },
                ],
              },
              Object {
                "kind": "SoftBreak",
                "nodes": Array [
                  Object {
                    "kind": "Excerpt: SoftBreak",
                    "nodeExcerpt": "[n]",
                  },
                ],
              },
              Object {
                "errorLocation": "@",
                "errorLocationPrecedingToken": "five",
                "errorMessage": "The HTML element has an invalid attribute: Expecting [q]=[q] after HTML attribute name",
                "kind": "ErrorText",
                "nodes": Array [
                  Object {
                    "kind": "Excerpt: ErrorText",
                    "nodeExcerpt": "[<]",
                  },
                ],
              },
              Object {
                "kind": "PlainText",
                "nodes": Array [
                  Object {
                    "kind": "Excerpt: PlainText",
                    "nodeExcerpt": "tag-e attr-five",
                  },
                ],
              },
              Object {
                "errorLocation": "@",
                "errorLocationPrecedingToken": "five",
                "errorMessage": "The [q]@[q] character looks like part of a TSDoc tag; use a backslash to escape it",
                "kind": "ErrorText",
                "nodes": Array [
                  Object {
                    "kind": "Excerpt: ErrorText",
                    "nodeExcerpt": "@",
                  },
                ],
              },
              Object {
                "kind": "PlainText",
                "nodes": Array [
                  Object {
                    "kind": "Excerpt: PlainText",
                    "nodeExcerpt": "=[q]five[q] /",
                  },
                ],
              },
              Object {
                "errorLocation": "[>]",
                "errorLocationPrecedingToken": "/",
                "errorMessage": "The [q][>][q] character should be escaped using a backslash to avoid confusion with an HTML tag",
                "kind": "ErrorText",
                "nodes": Array [
                  Object {
                    "kind": "Excerpt: ErrorText",
                    "nodeExcerpt": "[>]",
                  },
                ],
              },
              Object {
                "kind": "SoftBreak",
                "nodes": Array [
                  Object {
                    "kind": "Excerpt: SoftBreak",
                    "nodeExcerpt": "[n]",
                  },
                ],
              },
              Object {
                "errorLocation": "seven",
                "errorLocationPrecedingToken": "\\"",
                "errorMessage": "The HTML element has an invalid attribute: The next character after a closing quote must be spacing or punctuation",
                "kind": "ErrorText",
                "nodes": Array [
                  Object {
                    "kind": "Excerpt: ErrorText",
                    "nodeExcerpt": "[<]",
                  },
                ],
              },
              Object {
                "kind": "PlainText",
                "nodes": Array [
                  Object {
                    "kind": "Excerpt: PlainText",
                    "nodeExcerpt": "tag-f attr-six=[q]six[q]seven=[q]seven[q] /",
                  },
                ],
              },
              Object {
                "errorLocation": "[>]",
                "errorLocationPrecedingToken": "/",
                "errorMessage": "The [q][>][q] character should be escaped using a backslash to avoid confusion with an HTML tag",
                "kind": "ErrorText",
                "nodes": Array [
                  Object {
                    "kind": "Excerpt: ErrorText",
                    "nodeExcerpt": "[>]",
                  },
                ],
              },
              Object {
                "kind": "SoftBreak",
                "nodes": Array [
                  Object {
                    "kind": "Excerpt: SoftBreak",
                    "nodeExcerpt": "[n]",
                  },
                ],
              },
            ],
          },
        ],
      },
    ],
  },
}
`;

exports[`04 HTML start tags: with attributes, negative 2`] = `
Object {
  "buffer": "/**[n] * [<]tag-g attr=[q]multi[n] * line[q] /[>][n] */",
  "gaps": Array [],
  "lines": Array [
    "[<]tag-g attr=[q]multi",
    "line[q] /[>]",
  ],
  "logMessages": Array [
    "(2,4): The HTML element has an invalid attribute: The HTML string is missing its closing quote",
    "(3,11): The \\">\\" character should be escaped using a backslash to avoid confusion with an HTML tag",
  ],
  "nodes": Object {
    "kind": "Comment",
    "nodes": Array [
      Object {
        "kind": "Section",
        "nodes": Array [
          Object {
            "kind": "Paragraph",
            "nodes": Array [
              Object {
                "errorLocation": "[q]",
                "errorLocationPrecedingToken": "=",
                "errorMessage": "The HTML element has an invalid attribute: The HTML string is missing its closing quote",
                "kind": "ErrorText",
                "nodes": Array [
                  Object {
                    "kind": "Excerpt: ErrorText",
                    "nodeExcerpt": "[<]",
                  },
                ],
              },
              Object {
                "kind": "PlainText",
                "nodes": Array [
                  Object {
                    "kind": "Excerpt: PlainText",
                    "nodeExcerpt": "tag-g attr=[q]multi",
                  },
                ],
              },
              Object {
                "kind": "SoftBreak",
                "nodes": Array [
                  Object {
                    "kind": "Excerpt: SoftBreak",
                    "nodeExcerpt": "[n]",
                  },
                ],
              },
              Object {
                "kind": "PlainText",
                "nodes": Array [
                  Object {
                    "kind": "Excerpt: PlainText",
                    "nodeExcerpt": "line[q] /",
                  },
                ],
              },
              Object {
                "errorLocation": "[>]",
                "errorLocationPrecedingToken": "/",
                "errorMessage": "The [q][>][q] character should be escaped using a backslash to avoid confusion with an HTML tag",
                "kind": "ErrorText",
                "nodes": Array [
                  Object {
                    "kind": "Excerpt: ErrorText",
                    "nodeExcerpt": "[>]",
                  },
                ],
              },
              Object {
                "kind": "SoftBreak",
                "nodes": Array [
                  Object {
                    "kind": "Excerpt: SoftBreak",
                    "nodeExcerpt": "[n]",
                  },
                ],
              },
            ],
          },
        ],
      },
    ],
  },
}
`;

exports[`05 Eclipsed TSDoc 1`] = `
Object {
  "buffer": "/**[n] * [<]tag attr-one=[q]@tag[q] /[>][n] */",
  "gaps": Array [],
  "lines": Array [
    "[<]tag attr-one=[q]@tag[q] /[>]",
  ],
  "logMessages": Array [],
  "nodes": Object {
    "kind": "Comment",
    "nodes": Array [
      Object {
        "kind": "Section",
        "nodes": Array [
          Object {
            "kind": "Paragraph",
            "nodes": Array [
              Object {
                "kind": "HtmlStartTag",
                "nodes": Array [
                  Object {
                    "kind": "Excerpt: HtmlStartTag_OpeningDelimiter",
                    "nodeExcerpt": "[<]",
                  },
                  Object {
                    "kind": "Excerpt: HtmlStartTag_Name",
                    "nodeExcerpt": "tag",
                  },
                  Object {
                    "kind": "Excerpt: Spacing",
                    "nodeExcerpt": " ",
                  },
                  Object {
                    "kind": "HtmlAttribute",
                    "nodes": Array [
                      Object {
                        "kind": "Excerpt: HtmlAttribute_Name",
                        "nodeExcerpt": "attr-one",
                      },
                      Object {
                        "kind": "Excerpt: HtmlAttribute_Equals",
                        "nodeExcerpt": "=",
                      },
                      Object {
                        "kind": "Excerpt: HtmlAttribute_Value",
                        "nodeExcerpt": "[q]@tag[q]",
                      },
                      Object {
                        "kind": "Excerpt: Spacing",
                        "nodeExcerpt": " ",
                      },
                    ],
                  },
                  Object {
                    "kind": "Excerpt: HtmlStartTag_ClosingDelimiter",
                    "nodeExcerpt": "/[>]",
                  },
                ],
              },
              Object {
                "kind": "SoftBreak",
                "nodes": Array [
                  Object {
                    "kind": "Excerpt: SoftBreak",
                    "nodeExcerpt": "[n]",
                  },
                ],
              },
            ],
          },
        ],
      },
    ],
  },
}
`;

exports[`06 Closing tags, positive 1`] = `
Object {
  "buffer": "/**[n] * [<]/tag-a[>][n] * [<]/tag-b  [>][n] * [<]/tag-c[n] *   [>][n] */",
  "gaps": Array [],
  "lines": Array [
    "[<]/tag-a[>]",
    "[<]/tag-b  [>]",
    "[<]/tag-c",
    "  [>]",
  ],
  "logMessages": Array [],
  "nodes": Object {
    "kind": "Comment",
    "nodes": Array [
      Object {
        "kind": "Section",
        "nodes": Array [
          Object {
            "kind": "Paragraph",
            "nodes": Array [
              Object {
                "kind": "HtmlEndTag",
                "nodes": Array [
                  Object {
                    "kind": "Excerpt: HtmlEndTag_OpeningDelimiter",
                    "nodeExcerpt": "[<]/",
                  },
                  Object {
                    "kind": "Excerpt: HtmlEndTag_Name",
                    "nodeExcerpt": "tag-a",
                  },
                  Object {
                    "kind": "Excerpt: HtmlEndTag_ClosingDelimiter",
                    "nodeExcerpt": "[>]",
                  },
                ],
              },
              Object {
                "kind": "SoftBreak",
                "nodes": Array [
                  Object {
                    "kind": "Excerpt: SoftBreak",
                    "nodeExcerpt": "[n]",
                  },
                ],
              },
              Object {
                "kind": "HtmlEndTag",
                "nodes": Array [
                  Object {
                    "kind": "Excerpt: HtmlEndTag_OpeningDelimiter",
                    "nodeExcerpt": "[<]/",
                  },
                  Object {
                    "kind": "Excerpt: HtmlEndTag_Name",
                    "nodeExcerpt": "tag-b",
                  },
                  Object {
                    "kind": "Excerpt: Spacing",
                    "nodeExcerpt": "  ",
                  },
                  Object {
                    "kind": "Excerpt: HtmlEndTag_ClosingDelimiter",
                    "nodeExcerpt": "[>]",
                  },
                ],
              },
              Object {
                "kind": "SoftBreak",
                "nodes": Array [
                  Object {
                    "kind": "Excerpt: SoftBreak",
                    "nodeExcerpt": "[n]",
                  },
                ],
              },
              Object {
                "kind": "HtmlEndTag",
                "nodes": Array [
                  Object {
                    "kind": "Excerpt: HtmlEndTag_OpeningDelimiter",
                    "nodeExcerpt": "[<]/",
                  },
                  Object {
                    "kind": "Excerpt: HtmlEndTag_Name",
                    "nodeExcerpt": "tag-c",
                  },
                  Object {
                    "kind": "Excerpt: Spacing",
                    "nodeExcerpt": "[n]  ",
                  },
                  Object {
                    "kind": "Excerpt: HtmlEndTag_ClosingDelimiter",
                    "nodeExcerpt": "[>]",
                  },
                ],
              },
              Object {
                "kind": "SoftBreak",
                "nodes": Array [
                  Object {
                    "kind": "Excerpt: SoftBreak",
                    "nodeExcerpt": "[n]",
                  },
                ],
              },
            ],
          },
        ],
      },
    ],
  },
}
`;

exports[`07 Closing tags, negative 1`] = `
Object {
  "buffer": "/**[n] * [<]/tag-a/[>][n] * [<]/ tag-b[>][n] * [<]/tag-c[n] */",
  "gaps": Array [],
  "lines": Array [
    "[<]/tag-a/[>]",
    "[<]/ tag-b[>]",
    "[<]/tag-c",
  ],
  "logMessages": Array [
    "(2,4): Expecting a closing \\">\\" for the HTML tag",
    "(2,12): The \\">\\" character should be escaped using a backslash to avoid confusion with an HTML tag",
    "(3,4): Expecting an HTML element name: A space is not allowed here",
    "(3,12): The \\">\\" character should be escaped using a backslash to avoid confusion with an HTML tag",
    "(4,4): Expecting a closing \\">\\" for the HTML tag",
  ],
  "nodes": Object {
    "kind": "Comment",
    "nodes": Array [
      Object {
        "kind": "Section",
        "nodes": Array [
          Object {
            "kind": "Paragraph",
            "nodes": Array [
              Object {
                "errorLocation": "/",
                "errorLocationPrecedingToken": "a",
                "errorMessage": "Expecting a closing [q][>][q] for the HTML tag",
                "kind": "ErrorText",
                "nodes": Array [
                  Object {
                    "kind": "Excerpt: ErrorText",
                    "nodeExcerpt": "[<]",
                  },
                ],
              },
              Object {
                "kind": "PlainText",
                "nodes": Array [
                  Object {
                    "kind": "Excerpt: PlainText",
                    "nodeExcerpt": "/tag-a/",
                  },
                ],
              },
              Object {
                "errorLocation": "[>]",
                "errorLocationPrecedingToken": "/",
                "errorMessage": "The [q][>][q] character should be escaped using a backslash to avoid confusion with an HTML tag",
                "kind": "ErrorText",
                "nodes": Array [
                  Object {
                    "kind": "Excerpt: ErrorText",
                    "nodeExcerpt": "[>]",
                  },
                ],
              },
              Object {
                "kind": "SoftBreak",
                "nodes": Array [
                  Object {
                    "kind": "Excerpt: SoftBreak",
                    "nodeExcerpt": "[n]",
                  },
                ],
              },
              Object {
                "errorLocation": " ",
                "errorLocationPrecedingToken": "/",
                "errorMessage": "Expecting an HTML element name: A space is not allowed here",
                "kind": "ErrorText",
                "nodes": Array [
                  Object {
                    "kind": "Excerpt: ErrorText",
                    "nodeExcerpt": "[<]",
                  },
                ],
              },
              Object {
                "kind": "PlainText",
                "nodes": Array [
                  Object {
                    "kind": "Excerpt: PlainText",
                    "nodeExcerpt": "/ tag-b",
                  },
                ],
              },
              Object {
                "errorLocation": "[>]",
                "errorLocationPrecedingToken": "b",
                "errorMessage": "The [q][>][q] character should be escaped using a backslash to avoid confusion with an HTML tag",
                "kind": "ErrorText",
                "nodes": Array [
                  Object {
                    "kind": "Excerpt: ErrorText",
                    "nodeExcerpt": "[>]",
                  },
                ],
              },
              Object {
                "kind": "SoftBreak",
                "nodes": Array [
                  Object {
                    "kind": "Excerpt: SoftBreak",
                    "nodeExcerpt": "[n]",
                  },
                ],
              },
              Object {
                "errorLocation": "",
                "errorLocationPrecedingToken": "
",
                "errorMessage": "Expecting a closing [q][>][q] for the HTML tag",
                "kind": "ErrorText",
                "nodes": Array [
                  Object {
                    "kind": "Excerpt: ErrorText",
                    "nodeExcerpt": "[<]",
                  },
                ],
              },
              Object {
                "kind": "PlainText",
                "nodes": Array [
                  Object {
                    "kind": "Excerpt: PlainText",
                    "nodeExcerpt": "/tag-c",
                  },
                ],
              },
              Object {
                "kind": "SoftBreak",
                "nodes": Array [
                  Object {
                    "kind": "Excerpt: SoftBreak",
                    "nodeExcerpt": "[n]",
                  },
                ],
              },
            ],
          },
        ],
      },
    ],
  },
}
`;

exports[`08 Unusual HTML names, positive 1`] = `
Object {
  "buffer": "/**[n] * [<]a1/[>][n] * [<]a-a[>][n] * [<]a--9-[>][n] */",
  "gaps": Array [],
  "lines": Array [
    "[<]a1/[>]",
    "[<]a-a[>]",
    "[<]a--9-[>]",
  ],
  "logMessages": Array [],
  "nodes": Object {
    "kind": "Comment",
    "nodes": Array [
      Object {
        "kind": "Section",
        "nodes": Array [
          Object {
            "kind": "Paragraph",
            "nodes": Array [
              Object {
                "kind": "HtmlStartTag",
                "nodes": Array [
                  Object {
                    "kind": "Excerpt: HtmlStartTag_OpeningDelimiter",
                    "nodeExcerpt": "[<]",
                  },
                  Object {
                    "kind": "Excerpt: HtmlStartTag_Name",
                    "nodeExcerpt": "a1",
                  },
                  Object {
                    "kind": "Excerpt: HtmlStartTag_ClosingDelimiter",
                    "nodeExcerpt": "/[>]",
                  },
                ],
              },
              Object {
                "kind": "SoftBreak",
                "nodes": Array [
                  Object {
                    "kind": "Excerpt: SoftBreak",
                    "nodeExcerpt": "[n]",
                  },
                ],
              },
              Object {
                "kind": "HtmlStartTag",
                "nodes": Array [
                  Object {
                    "kind": "Excerpt: HtmlStartTag_OpeningDelimiter",
                    "nodeExcerpt": "[<]",
                  },
                  Object {
                    "kind": "Excerpt: HtmlStartTag_Name",
                    "nodeExcerpt": "a-a",
                  },
                  Object {
                    "kind": "Excerpt: HtmlStartTag_ClosingDelimiter",
                    "nodeExcerpt": "[>]",
                  },
                ],
              },
              Object {
                "kind": "SoftBreak",
                "nodes": Array [
                  Object {
                    "kind": "Excerpt: SoftBreak",
                    "nodeExcerpt": "[n]",
                  },
                ],
              },
              Object {
                "kind": "HtmlStartTag",
                "nodes": Array [
                  Object {
                    "kind": "Excerpt: HtmlStartTag_OpeningDelimiter",
                    "nodeExcerpt": "[<]",
                  },
                  Object {
                    "kind": "Excerpt: HtmlStartTag_Name",
                    "nodeExcerpt": "a--9-",
                  },
                  Object {
                    "kind": "Excerpt: HtmlStartTag_ClosingDelimiter",
                    "nodeExcerpt": "[>]",
                  },
                ],
              },
              Object {
                "kind": "SoftBreak",
                "nodes": Array [
                  Object {
                    "kind": "Excerpt: SoftBreak",
                    "nodeExcerpt": "[n]",
                  },
                ],
              },
            ],
          },
        ],
      },
    ],
  },
}
`;

exports[`09 Unusual HTML names, negative 1`] = `
Object {
  "buffer": "/**[n] * [<]1a/[>][n] * [<]a.a[>][n] * [<]_a[>][n] */",
  "gaps": Array [],
  "lines": Array [
    "[<]1a/[>]",
    "[<]a.a[>]",
    "[<]_a[>]",
  ],
  "logMessages": Array [
    "(2,4): Invalid HTML element: An HTML name must be an ASCII letter followed by zero or more letters, digits, or hyphens",
    "(2,8): The \\">\\" character should be escaped using a backslash to avoid confusion with an HTML tag",
    "(3,4): Invalid HTML element: An HTML name must be an ASCII letter followed by zero or more letters, digits, or hyphens",
    "(3,8): The \\">\\" character should be escaped using a backslash to avoid confusion with an HTML tag",
    "(4,4): Invalid HTML element: An HTML name must be an ASCII letter followed by zero or more letters, digits, or hyphens",
    "(4,7): The \\">\\" character should be escaped using a backslash to avoid confusion with an HTML tag",
  ],
  "nodes": Object {
    "kind": "Comment",
    "nodes": Array [
      Object {
        "kind": "Section",
        "nodes": Array [
          Object {
            "kind": "Paragraph",
            "nodes": Array [
              Object {
                "errorLocation": "1a",
                "errorLocationPrecedingToken": "<",
                "errorMessage": "Invalid HTML element: An HTML name must be an ASCII letter followed by zero or more letters, digits, or hyphens",
                "kind": "ErrorText",
                "nodes": Array [
                  Object {
                    "kind": "Excerpt: ErrorText",
                    "nodeExcerpt": "[<]",
                  },
                ],
              },
              Object {
                "kind": "PlainText",
                "nodes": Array [
                  Object {
                    "kind": "Excerpt: PlainText",
                    "nodeExcerpt": "1a/",
                  },
                ],
              },
              Object {
                "errorLocation": "[>]",
                "errorLocationPrecedingToken": "/",
                "errorMessage": "The [q][>][q] character should be escaped using a backslash to avoid confusion with an HTML tag",
                "kind": "ErrorText",
                "nodes": Array [
                  Object {
                    "kind": "Excerpt: ErrorText",
                    "nodeExcerpt": "[>]",
                  },
                ],
              },
              Object {
                "kind": "SoftBreak",
                "nodes": Array [
                  Object {
                    "kind": "Excerpt: SoftBreak",
                    "nodeExcerpt": "[n]",
                  },
                ],
              },
              Object {
                "errorLocation": "a.a",
                "errorLocationPrecedingToken": "<",
                "errorMessage": "Invalid HTML element: An HTML name must be an ASCII letter followed by zero or more letters, digits, or hyphens",
                "kind": "ErrorText",
                "nodes": Array [
                  Object {
                    "kind": "Excerpt: ErrorText",
                    "nodeExcerpt": "[<]",
                  },
                ],
              },
              Object {
                "kind": "PlainText",
                "nodes": Array [
                  Object {
                    "kind": "Excerpt: PlainText",
                    "nodeExcerpt": "a.a",
                  },
                ],
              },
              Object {
                "errorLocation": "[>]",
                "errorLocationPrecedingToken": "a",
                "errorMessage": "The [q][>][q] character should be escaped using a backslash to avoid confusion with an HTML tag",
                "kind": "ErrorText",
                "nodes": Array [
                  Object {
                    "kind": "Excerpt: ErrorText",
                    "nodeExcerpt": "[>]",
                  },
                ],
              },
              Object {
                "kind": "SoftBreak",
                "nodes": Array [
                  Object {
                    "kind": "Excerpt: SoftBreak",
                    "nodeExcerpt": "[n]",
                  },
                ],
              },
              Object {
                "errorLocation": "_a",
                "errorLocationPrecedingToken": "<",
                "errorMessage": "Invalid HTML element: An HTML name must be an ASCII letter followed by zero or more letters, digits, or hyphens",
                "kind": "ErrorText",
                "nodes": Array [
                  Object {
                    "kind": "Excerpt: ErrorText",
                    "nodeExcerpt": "[<]",
                  },
                ],
              },
              Object {
                "kind": "PlainText",
                "nodes": Array [
                  Object {
                    "kind": "Excerpt: PlainText",
                    "nodeExcerpt": "_a",
                  },
                ],
              },
              Object {
                "errorLocation": "[>]",
                "errorLocationPrecedingToken": "_a",
                "errorMessage": "The [q][>][q] character should be escaped using a backslash to avoid confusion with an HTML tag",
                "kind": "ErrorText",
                "nodes": Array [
                  Object {
                    "kind": "Excerpt: ErrorText",
                    "nodeExcerpt": "[>]",
                  },
                ],
              },
              Object {
                "kind": "SoftBreak",
                "nodes": Array [
                  Object {
                    "kind": "Excerpt: SoftBreak",
                    "nodeExcerpt": "[n]",
                  },
                ],
              },
            ],
          },
        ],
      },
    ],
  },
}
`;
